# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Golang Build And Release
env:
  GPG_KEY_ID: ${{ secrets.MAVEN_SIGN_KEY_ID }}
  GPG_KEY: ${{ secrets.MAVEN_SIGN_KEY }}
  GPG_PWD: ${{ secrets.MAVEN_SIGN_KEY_PWD }}
  PUB_USER: ${{ secrets.MAVEN_USER_NAME }}
  PUB_PWD: ${{ secrets.MAVEN_USER_PWD }}
  GOARCH: amd64
  GOOS: linux
  IMAGE: ghcr.io/${{ github.repository_owner }}/infra-tracing-sink
on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Golang
        uses: actions/setup-go@v2
        with:
          go-version: 1.15.x
      - name: User Golang Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod              # Module download cache
            ~/.cache/go-build         # Build cache (Linux)
            ~/Library/Caches/go-build # Build cache (Mac)
            '%LocalAppData%\go-build' # Build cache (Windows)
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Go Build
        run: |
          mkdir -p output
          go build -ldflags="-w -s" -o "./output/tracing-sink" -i ./main/

          echo "GIT_VER=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "code version: ${{ env.GIT_VER }}"
      - name: Login to Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_DOCKER_USER }}
          password: ${{ secrets.GH_DOCKER_PWD }}
      - name: Docker build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./dockerfile
          tag_with_ref: true
          labels: |
            org.opencontainers.image.authors=${{ github.repository_owner }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.description=Created from commit ${{ github.sha }} and ref ${{ github.ref }}
          tags: |
            ${{ env.IMAGE }}:latest
            ${{ env.IMAGE }}:${{ env.GIT_VER }}
          push: true